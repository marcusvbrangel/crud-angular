{"ast":null,"code":"import { tap, first, delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CoursesService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API = '/assets/courses.json';\n  }\n  list() {\n    return this.httpClient.get(this.API).pipe(first(),\n    // Note: Use this method because the call isn't a stream... just the first result is necessary...\n    delay(2000),\n    // Note: two seconds delay...\n    tap(courses => console.log(courses)));\n  }\n}\nCoursesService.ɵfac = function CoursesService_Factory(t) {\n  return new (t || CoursesService)(i0.ɵɵinject(i1.HttpClient));\n};\nCoursesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoursesService,\n  factory: CoursesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,EAAEC,KAAK,EAAEC,KAAK,QAAQ,gBAAgB;;;AAOlD,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFb,QAAG,GAAG,sBAAsB;EAEC;EAE9CC,IAAI;IAEF,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAW,IAAI,CAACC,GAAG,CAAC,CAC7CC,IAAI,CACDR,KAAK,EAAE;IAAG;IACVC,KAAK,CAAC,IAAI,CAAC;IAAG;IACdF,GAAG,CAACU,OAAO,IAAIC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC,CACvC;EAEH;;AAfWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAU,SAAdV,cAAc;EAAAW,YAFb;AAAM","names":["tap","first","delay","CoursesService","constructor","httpClient","list","get","API","pipe","courses","console","log","factory","providedIn"],"sourceRoot":"","sources":["/home/wolf/desenvolvimento/loiane/crud-angular-spring/crud-angular/src/app/courses/services/courses.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap, first, delay } from 'rxjs/operators';\n\nimport { Course } from '../model/course';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoursesService {\n\n  private readonly API = '/assets/courses.json';\n\n  constructor(private httpClient: HttpClient) { }\n\n  list() {\n\n    return this.httpClient.get<Course[]>(this.API)\n    .pipe(\n        first(),  // Note: Use this method because the call isn't a stream... just the first result is necessary...\n        delay(2000),  // Note: two seconds delay...\n        tap(courses => console.log(courses))\n    );\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}